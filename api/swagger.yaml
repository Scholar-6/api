---
swagger: "2.0"
info:
  description: "An API to build, play and teach bricks"
  version: "1.0.0"
  title: "Learning Fortress"
  termsOfService: ""
  contact:
    email: "lindsaymacvean@scholar6.org"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
tags:
- name: "brick"
  description: "Operations with bricks"
- name: "question"
  description: "Operations with questions"
- name: "brickattempt"
  description: "Operations with brickattempts"
schemes:
- "http"
paths:
  /brick:
    post:
      tags:
      - "brick"
      summary: "create a brick"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Brick data"
        required: true
        schema:
          $ref: "#/definitions/Brick"
      responses:
        200:
          description: "successfully created a brick"
      x-swagger-router-controller: "brick"
    get:
      tags:
      - "brick"
      summary: "get a list of all brick ids and titles"
      description: ""
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successfully get bricks"
      x-swagger-router-controller: "brick"
  /brick/{brickId}:
    get:
      tags:
      - "brick"
      summary: "Retrieve a brick"
      description: ""
      produces:
      - "application/json"
      parameters:
        - in: path
          name: brickId
          type: string
          required: true
      responses:
        200:
          description: "brick object"
      x-swagger-router-controller: "brick"
    put:
      tags:
      - "brick"
      summary: "Update a brick"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: path
        name: brickId
        type: string
        required: true
      - in: "body"
        name: "body"
        description: "New brick data"
        required: true
        schema:
          $ref: "#/definitions/Brick"
      responses:
        200:
          description: "brick object"
      x-swagger-router-controller: "brick"
    delete:
      tags:
      - "brick"
      summary: "delete a brick"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: path
        name: brickId
        type: string
        required: true
      responses:
        200:
          description: "brick object"
      x-swagger-router-controller: "brick"
  /brick/{brickId}/question/{questionId}:
    post:
      tags:
      - "question"
      summary: "create a new question"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: path
        name: brickId
        type: string
        required: true
      - in: path
        name: questionId
        type: string
        required: true
      - in: "body"
        name: "body"
        description: "Question data"
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        200:
          description: "successfully created a question"
      x-swagger-router-controller: "brick"
    put:
      tags:
      - "question"
      summary: "update a question"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: path
        name: brickId
        type: string
        required: true
      - in: path
        name: questionId
        type: string
        required: true
      - in: "body"
        name: "body"
        description: "Question data"
        required: true
        schema:
          $ref: "#/definitions/Question"
      responses:
        200:
          description: "successfully updated a question"
      x-swagger-router-controller: "brick"
    delete:
      tags:
      - "question"
      summary: "delete a question"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: path
        name: brickId
        type: string
        required: true
      - in: path
        name: questionId
        type: string
        required: true
      responses:
        200:
          description: "successfully deleted a brick"
      x-swagger-router-controller: "brick"
  /brickattempt/{brickattemptId}:
    get:
      tags:
      - "brickattempt"
      summary: "Finds a brick attempt"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: path
        name: brickattemptId
        type: string
        required: true
      responses:
        200:
          description: "Returned brickattempt"
      x-swagger-router-controller: "brick"
definitions:
  Brick:
    type: "object"
    properties:
      brief:
        type: "string"
      prep:
        type: "string"
      creator:
        type: "string"
      summary:
        type: "string"
      title:
        type: "string"
      totalUsers:
        type: "integer"
      type:
        type: "integer"
    example:
      brief: "ShortAnswer Brief"
      creator: "Andriy"
      prep: "Some prep"
      subject: "Some subject"
      summary: "Some summary"
      title: "Some title"
      totalUsers: 43220
      type: 1
  Question:
    type: "object"
    properties:
      components:
        type: "array"
        items:
          $ref: "#/definitions/Component"
      number:
        type: "integer"
    example:
      components: [
        {
          data: {
            text: "Some text"
          },
          name: "Component Name"
        }
      ]
      number: 1
  Component:
    type: "object"
    properties:
      data:
        type: "object"
        properties:
          text:
            type: "string"
      name:
        type: "string"
externalDocs:
  description: "Find out more about Learning fortress"
  url: "https://github.com/scholar-6/learning-fortress-backend"
