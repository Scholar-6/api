{
  "swagger": "2.0",
  "info": {
    "description": "An API to build, play and teach bricks",
    "version": "1.0.0",
    "title": "Brillder",
    "termsOfService": "",
    "contact": {
      "email": "lindsaymacvean@scholar6.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "swagger.scholar6.org",
  "tags": [
    {
      "name": "brick",
      "description": "Bricks functionality"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User password",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
          }
        }
      }
    },
    "/auth/login/:userType": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User password",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
          }
        }
      }
    },
    "/auth/signUp": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User password",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "confirmPassword"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "confirmPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login out current user",
        "responses": {
          "200": {
            "description": "ok",
          }
        }
      }
    },
    "/auth/google/login/{returnUrl}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Login by Google",
        "parameters": [
          {
            "in": "path",
            "name": "returnUrl",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
          }
        }
      }
    },
    "/fileUpload": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Uploads a file.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
          }
        }
      }
    },
    "/user/tutorialShowed": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Mark tutoria as showed for current user",
        "responses": {
          "200": {
            "description": "ok",
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by id",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/:userId": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get current user",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/play/brickSummary/:brickId": {
      "get": {
        "tags": [
          "play"
        ],
        "summary": "Get brick summary",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/BrickSummaryModel"
            }
          }
        }
      }
    },
    "/play/attempts": {
      "get": {
        "tags": [
          "play"
        ],
        "summary": "Get all attempts",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/ArrayOfBrickAttempts"
            }
          }
        }
      }
    },
    "/play/attempt": {
      "post": {
        "tags": [
          "play"
        ],
        "summary": "Create attempt",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BrickAttempt object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrickAttempt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "put": {
        "tags": [
          "play"
        ],
        "summary": "Update attempt",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BrickAttempt model object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrickAttemptUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/bricks": {
      "get": {
        "tags": [
          "brick"
        ],
        "summary": "Get all bricks",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/ArrayOfBricks"
            }
          }
        }
      }
    },
    "/bricks/byStatus/{status}": {
      "get": {
        "tags": [
          "brick"
        ],
        "summary": "Get all bricks",
          "parameters": [
          {
            "in": "path",
            "name": "status",
            "type": "integer",
            "enum": [1,2,3
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/ArrayOfBricks"
            }
          }
        }
      }
    },
    "/bricks/currentUser": {
      "get": {
        "tags": [
          "brick"
        ],
        "summary": "Get all bricks of current user",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/ArrayOfBricks"
            }
          }
        }
      }
    },
    "/brick/{id}": {
      "delete": {
        "tags": [
          "brick"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "Delete specific brick by id",
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      },
      "get": {
        "tags": [
          "brick"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "summary": "Get specific brick by id",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/Brick"
            }
          }
        }
      }
    },
    "/brick": {
      "post": {
        "tags": [
          "brick"
        ],
        "summary": "Add a new brick",
        "description": "",
        "operationId": "addBrick",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Brick object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brick"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/Brick"
            }
          }
        },
        "security": [
          {
            "brillder_auth": [
              "write:bricks",
              "read:bricks"
            ]
          }
        ],
        "x-swagger-router-controller": "Brick"
      },
      "put": {
        "tags": [
          "brick"
        ],
        "summary": "Update an existing brick",
        "description": "",
        "operationId": "updateBrick",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Brick object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brick"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/Brick"
            }
          }
        },
        "security": [
          {
            "brillder_auth": [
              "write:bricks",
              "read:bricks"
            ]
          }
        ],
        "x-swagger-router-controller": "Brick"
      }
    }
  },
  "securityDefinitions": {
    "brillder_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "write:bricks": "modify bricks in your account",
        "read:bricks": "read your bricks"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "ArrayOfBricks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Brick"
      }
    },
    "ArrayOfBrickAttempts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BrickAttempt"
      }
    },
    "ArrayOfQuestions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Question"
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "integer",
          "format": "int64"
        },
        "contentBlocks": {
          "type": "string"
        },
        "questionType": {
          "type": "string",
          "enum": [
            "None",
            "ShortAnswer",
            "ChooseOne",
            "ChooseSeveral",
            "VerticalShuffle",
            "HorizontalShuffle",
            "PairMatch",
            "Categorise",
            "MissingWord",
            "WordHighlighting",
            "LineHighlighting"
          ]
        }
      },
      "xml": {
        "name": "Question"
      }
    },
    "Brick": {
      "type": "object",
      "required": [
        "questions",
        "subTopic",
        "subject",
        "title",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "brickLength": {
          "type": "string",
          "enum": [
            "0",
            "20",
            "40",
            "60"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Main"
          ]
        },
        "subject": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "alternativeSubject": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        },
        "subTopic": {
          "type": "string"
        },
        "alternativeTopics": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "brief": {
          "type": "string"
        },
        "prep": {
          "type": "string"
        },
        "synthesis": {
          "type": "string"
        },
        "revisionLog": {
          "type": "string"
        },
        "openQuestion": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Question"
          }
        }
      },
      "xml": {
        "name": "Brick"
      }
    },
    "ComponentAttempt": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "object"
        },
        "correct": {
          "type": "boolean"
        },
        "marks": {
          "type": "number"
        },
        "maxMarks": {
          "type": "number"
        }
      }
    },
    "BrickAttempt": {
      "type": "object",
      "properties": {
        "brickId": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "integer",
          "format": "int64"
        },
        "oldScore": {
          "type": "integer",
          "format": "int64"
        },
        "maxScore": {
          "type": "integer",
          "format": "int64"
        },
        "studentId": {
          "type": "integer",
          "format": "int64"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentAttempt"
          }
        },
      },
      "xml": {
        "name": "BrickAttempt"
      }
    },
    "Subject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
        },
      },
      "xml": {
        "name": "Subject"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "createBricks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brick"
          }
        },
        "editedBricks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brick"
          }
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subject"
          }
        },
        "email": {
          "type": "string",
        },
        "firstName": {
          "type": "string",
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "tutorialPassed": {
          "type": "boolean",
        },
        "type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ]
        },
      },
      "xml": {
        "name": "User"
      }
    },
    "BrickAttemptUpdateModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/BrickAttempt"
        },
      }
    },
    "BrickSummaryModel": {
      "type": "object",
      "properties": {
        "totalUsers": {
          "type": "integer"
        },
        "averageScore": {
          "type": "integer"
        },
        "highScore": {
          "type": "integer"
        },
        "brick": {
          "$ref": "#/definitions/Brick"
        },
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Brillder",
    "url": "https://github.com/Scholar-6/brillder"
  }
}